#!/usr/bin/env python3


import os
import re
import subprocess


# DATA_FILE = 'dime-2012.csv'
DATA_FILE = 'dime-sample.csv'


def make_test(target):
    """Run `make` and look for identified errors."""
    test = subprocess.Popen(['/usr/bin/make', target],
                            stdout=subprocess.PIPE,
                            stderr=subprocess.PIPE)
    (stdoutb, stderrb) = test.communicate()
    print(stderrb.decode())
    stdout = stdoutb.decode()
    print(stdout)
    if test.returncode != 0:
        print('ERROR: make {} => {}'.format(target, test.returncode))
        raise SystemExit(1)

    matches = re.finditer(r'\((\d*),', stdout)
    return [m.group(1) for m in matches]


def update_data(data_file):
    """This makes sure that the data file is up-to-date."""
    if os.path.exists(data_file):
        os.unlink(data_file)
    subprocess.call(['/usr/bin/make', data_file])


def main():
    # update_data(DATA_FILE)

    errs = make_test('test-sample')
    if not errs:
        return

    first_err = errs[0]
    print('ERROR IN FILE line {}. '
          'Sampling around that point.'.format(first_err))
    subprocess.call(['./bin/issues', first_err, 'dime-sample.csv'])

    issue_errs = make_test('test-issues')
    first_err = issue_errs[0]
    print('Diffing lines {} and {}.'.format(int(first_err)-1, first_err))
    subprocess.call(['./bin/difflines', first_err, 'dime-issues.csv'])


if __name__ == '__main__':
    main()
